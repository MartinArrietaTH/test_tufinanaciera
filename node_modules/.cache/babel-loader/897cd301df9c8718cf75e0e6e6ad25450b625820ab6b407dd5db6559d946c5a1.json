{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\tu_financiera\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport List from './components/List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [items, setItems] = useState([]); // Estado local para almacenar los datos\n  const [loading, setLoading] = useState(true); // Estado de carga\n  const [error, setError] = useState(null); // Estado para manejar errores\n\n  useEffect(() => {\n    // Realizar la petición a la API\n    fetch('https://pokeapi.co/api/v2/pokemon').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok'); // Manejo de errores de red\n      }\n      return response.json();\n    }).then(data => {\n      setItems(data.results); // Actualizar el estado con los datos obtenidos\n      setLoading(false); // Finalizar la carga\n    }).catch(error => {\n      console.error('Error fetching data:', error); // Mostrar errores en consola\n      setError(error); // Actualizar el estado de error\n      setLoading(false); // Finalizar la carga incluso en caso de error\n    });\n  }, []); // El arreglo vacío como dependencia asegura que el efecto solo se ejecute una vez al montar el componente\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Listado de Pok\\xE9mon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error al cargar datos: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3a4WGIUzx2hoS/cdRKLB8fOExE8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","List","jsxDEV","_jsxDEV","App","_s","items","setItems","loading","setLoading","error","setError","fetch","then","response","ok","Error","json","data","results","catch","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["C:/laragon/www/tu_financiera/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport List from './components/List';\n\nfunction App() {\n  const [items, setItems] = useState([]); // Estado local para almacenar los datos\n  const [loading, setLoading] = useState(true); // Estado de carga\n  const [error, setError] = useState(null); // Estado para manejar errores\n\n  useEffect(() => {\n    // Realizar la petición a la API\n    fetch('https://pokeapi.co/api/v2/pokemon')\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok'); // Manejo de errores de red\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setItems(data.results); // Actualizar el estado con los datos obtenidos\n        setLoading(false); // Finalizar la carga\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error); // Mostrar errores en consola\n        setError(error); // Actualizar el estado de error\n        setLoading(false); // Finalizar la carga incluso en caso de error\n      });\n  }, []); // El arreglo vacío como dependencia asegura que el efecto solo se ejecute una vez al montar el componente\n\n  return (\n    <div className=\"App\">\n      <h1>Listado de Pokémon</h1>\n      {loading && <p>Cargando...</p>}\n      {error && <p>Error al cargar datos: {error.message}</p>}\n      <List items={items} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACd;IACAY,KAAK,CAAC,mCAAmC,CAAC,CACvCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACdX,QAAQ,CAACW,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;MACxBV,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDW,KAAK,CAAEV,KAAK,IAAK;MAChBW,OAAO,CAACX,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC,CAAC;MAC9CC,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC;MACjBD,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEN,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAAoB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1BnB,OAAO,iBAAIL,OAAA;MAAAoB,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC7BjB,KAAK,iBAAIP,OAAA;MAAAoB,QAAA,GAAG,yBAAuB,EAACb,KAAK,CAACkB,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvDxB,OAAA,CAACF,IAAI;MAACK,KAAK,EAAEA;IAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV;AAACtB,EAAA,CAjCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}